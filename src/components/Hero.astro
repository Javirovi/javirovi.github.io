---
export interface Props {
  lang: string;
}

import { getTranslations } from '../i18n/translations';
import SocialLinks from './SocialLinks.astro';
import profileImage from '../assets/javirovi_profile.png';

const { lang } = Astro.props;
const t = getTranslations(lang);
---

<section id="hero" class="hero-section">
  <div class="container">
    <div class="hero-content">
      <div class="hero-text fade-in">
        <h1>{t.hero.name}</h1>
        <h2>{t.hero.title}</h2>
        <div class="hero-description">
          {t.hero.description.split('\n\n').map((paragraph: string) => {
            const parts = paragraph.split(/(\*\*[^*]+\*\*)/g);
            return (
              <p>
                {parts.map((part: string) => {
                  if (part.startsWith('**') && part.endsWith('**')) {
                    return <strong>{part.slice(2, -2)}</strong>;
                  }
                  return part;
                })}
              </p>
            );
          })}
        </div>
        <SocialLinks className="hero-social" />
      </div>
      <div class="hero-image fade-in">
        <img src={profileImage.src} alt={t.hero.name} />
      </div>
    </div>
  </div>
</section>

<style>
  .hero-section {
    min-height: 75vh;
    display: flex;
    align-items: center;
    padding-top: var(--spacing-2xl);
    padding-bottom: var(--spacing-2xl);
  }

  .hero-content {
    display: grid;
    grid-template-columns: 3fr 2fr;
    gap: var(--spacing-2xl);
    align-items: center;
  }

  .hero-text h1 {
    color: var(--color-text);
    margin-bottom: var(--spacing-sm);
    font-size: calc(var(--font-size-4xl) * 1.15);
  }

  .hero-text h2 {
    color: var(--color-primary);
    font-size: var(--font-size-xl);
    font-weight: 500;
    margin-bottom: var(--spacing-lg);
  }

  .hero-description p {
    font-size: var(--font-size-base);
    line-height: 1.7;
    color: var(--color-text);
    opacity: 0.9;
    margin-bottom: var(--spacing-md);
  }

  .hero-description p:last-child {
    margin-bottom: 0;
  }

  .hero-description strong {
    color: var(--color-text);
    font-weight: 700;
  }

  .hero-image {
    display: flex;
    justify-content: flex-end;
  }

  .hero-image img {
    width: 100%;
    height: auto;
    max-width: 100%;
    max-height: 550px;
    object-fit: contain;
    border-radius: var(--radius);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
  }

  :global(.hero-social) {
    margin-top: var(--spacing-xl);
  }

  @media (max-width: 768px) {
    .hero-section {
      min-height: auto;
      padding-top: var(--spacing-2xl);
      padding-bottom: var(--spacing-2xl);
    }

    .hero-content {
      grid-template-columns: 1fr;
      gap: var(--spacing-2xl);
    }

    .hero-text {
      text-align: center;
    }

    :global(.hero-social) {
      justify-content: center;
    }

    .hero-image {
      justify-content: center;
    }

    .hero-image img {
      max-height: 400px;
    }
  }
</style>
